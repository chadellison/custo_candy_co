exit
candy.to_dollars
candy.price
subtotal
exit
candy_order.sub_total
exit
number_to_currency(price)
price
exit
number_to_currency(sub_total/100.0)
number_to_currency(sub_total)
number_t0_currency(sub_total)
number_to_currency(currency)
exit
xit
number_to_currency(currency)
sub_total
exit
sprintf("%.2f", total/100.0)
exit
sprintf("%.2f", price)
sprintf(".2f", price)
sprintf("%-4d", price)
-4
sprintf("%-2d", price)
sprintf("%20d", price)
sprintf("%22d", price)
sprintf("%0-2d", price)
sprintf("%04d", price)
sprintf("%02d", price)
price = total/100.0
sprintf("%02d", (total/100.0))
sprintf("%02d", total)
total
exit
@candy_orders.calculate_total_price
exit
@candy_orders.calculate_total_price
exit
@candy_orders.calculate_total_price
exit
@candy_orders.calculate_total_price(@candy_orders)
@candy_orders.class
@candy_orders
exit
number_to_currency(total)
total.class
total
exit
@candy_orders
@total_price
exit
order.candies
cart_contents
candy
CandyOrder.find_by(candy_id: id, order_id: order.id)
candy_order
next
candy_order
next
Candy.find(id)
candy
candy_order
next
candy_order
exit
next
candy
next
candy_order
candy_order.update(quantity: quantity, sub_total: subtotal)
candy_order
exit
@candies.first.to_dollars
@candies.first.price
@candies = Candy.all
Candy.all
exit
Candy
@candies
exit
@candies
exit
user.id
Order.find_by(user_id: user.id)
Order.findby(user_id: user.id)
order
exit
@orders.each { |order| order.id, order.created_at }
@orders.each do |order|
exit
@orders
@orders.candies
@orders
@user
exit
@orders
exit
@order.candy_orders
exit
@order.candy_orders
@order.candy_order
prepar
exit
eixt
candy_order
exit
CandyOrder.find_by(order_id: @order.id)
prepare_order(@order, params[:contents])
@order.candies
exit
@order.candies
@orders.candies
exit
params[:contents]
params[:contents
params
exit
@order
exit
params
exit
Candy.all
exit
candy2.id
exit
contents
exit
@cart.contents
@cart
exit
cart
exit
cart
cart.contes
exit
candy3.price
candy1.price
total_price
exit
candy.price
candy.currency
exit
number_to_currency(price)
price
exit
order.candy_orders.reduce(0) { |sub, candy_order| sub += candy_order.sub_total }
order.candy_orders.reduce(:+) { |sub, candy_order| sub += candy_order.sub_total }
order.candy_orders.reduce { |sub, candy_order| sub += candy_order.sub_total }
order.candy_orders.reduce(:+) { |candy_order| candy_order.sub_total }
order.candy_orders.reduce(0) { |candy_order| candy_order.sub_total }
order.candy_orders.reduce { |candy_order| candy_order.sub_total }
order.candy_orders
candy_order2
candy_order1
price1
exit
@candy_orders
exit
order.candy_orders
order.candy_order
user.candy_orders
candy_order2
candy_order1
exit
candy_order1
exit
candy1_quantity
candy2_quantity
order.candy_orders
exit
@candy_orders
exit
order.candy_orders
exit
@candy_orders
exit
fg
Order.find(params[:id])
Order.find_by(id: params[:id])
params(:id)
Order.find_by(id: params(:id))
Order.find_by(id: params(:id)
params
exit
@orders.candies
exit
order.candies
order = @orders
@orders.candies
@user.orders.candies
@orders
orders
exit
@orders
@user
exit
fg
exit
@user.orders
@user
@orders
exit
candy_order1
exit
candy_order2
candy_order1
exit
order.joins(:candy1)
exit
candy_order2.candy << candy1
candy_order2.candies << candy1
exit
candy_order1
order.candies
order
exit
order
order.candies << candy1
order = Order.create
exit
order
order.candies
exit
candy_order1
order.candies << candy1
candy_order2
exit
candy_order1
exit
candy_order1
exit
CandyOrder
candy_order1
exit
candy1_quantity
exit
candy1.id
candy1
cart.contents[(candy1.id).to_s]
cart.contents
candy1_quantity
exit
@orders
exit
user
exit
session[:user_id]
params
exit
session
current_user
exit
cart.contents
exit
